---
layout: post
title: "명품 자바 프로그래밍 개정 4판: 자바의 출현과 WORA"
date: 2025-10-27 21:57:00 +0900
categories: Java Study
---

# 자바의 태동
---
 초기 선마이크로시스템즈는 플랫폼 독립적이며 메모리 사용량이 적은 새로운 언어와 실행 체계를 개발했다. 이름은 [오크][1]로, 이 언어를 인터넷 환경에 적합하도록 발전시켜 마침내 1995년에 자바라는 이름으로 출시했다. 현재는 [오라클][2]에서 선마이크로 시스템스를 인수하여 자바를 제공하고 있다.

# WORA(Write Once Run Anywhere)
---
 C와 C++ 등의 프로그래밍 언어들은 [플랫폼 종속성][3]을 갖지만 자바는 개발 단계에서부터 플랫폼 독립성을 지원하도록 설계되었다. [자바 가상 머신][4]이 있으면 프로그램에 동일한 실행 환경을 제공하며, 동일한 실행 결과를 기대할 수 있다.

# 바이트 코드
---
 바이트 코드는 자바 가상 머신에서만 실행되는 기계어다. 자바 컴파일러는 자바 소스 프로그램을 컴파일하여 바이트 코드로 된 클래스 파일을 생성하며, 이 클래스 파일은 컴퓨터에 의해 직접 실행되지 않고 자바 가상 머신이 인터프리터 방식으로 실행시킨다.

# 자바 가상 머신
---
 자바 가상 머신은 소프트웨어로, 서로 다른 플랫폼에서 자바 프로그램이 실행되도록 동일한 환경을 제공한다. 따라서 플랫폼마다 서로 다르게 작성되어 배포된다.

![자바 가상 머신(JVM) 아키텍처의 개요도](https://drive.google.com/thumbnail?id=17fSDXf9ZSvvmuEboaeSrtU40T6sQ4crB&sz=w1000)

 [1]: https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_(%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D_%EC%96%B8%EC%96%B4) "선마이크로시스템즈 사무실 앞의 참나무에서 따온 이름"
 [2]: https://www.oracle.com/kr/ "미국의 소프트웨어 기업 중 하나"
 [3]: https://en.wikipedia.org/wiki/Low-level_programming_language "플랫폼 종속성을 가진 프로그래밍 언어는 보통 C#의 CLR, Java의 JVM과 같이 실행 환경이 달라도 동일 실행 결과를 보장하는 기능을 지원하지 않는다."
 [4]: https://ko.wikipedia.org/wiki/%EC%9E%90%EB%B0%94_%EA%B0%80%EC%83%81_%EB%A8%B8%EC%8B%A0 "일명 JVM(Java Virtual Machine)으로 불리며, 바이트 코드를 실행할 수 있는 주체다."